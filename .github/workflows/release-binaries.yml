name: Publish Binaries

on:
  release:
    types:
      - created

env:
  RUST_VERSION: 1.43.0
jobs:
  publish:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          # - macOS-latest
        target:
          - x86_64-unknown-linux-musl
          # - x86_64-apple-darwin
        exclude:
          - os: macOS-latest
            target: x86_64-unknown-linux-musl
          - os: ubuntu-latest
            target: x86_64-apple-darwin
    steps:
      - name: Checkout sources
        uses: actions/checkout@v1

      - name: Build release binary
        if: matrix.target == 'x86_64-unknown-linux-musl'
        run: |
          docker run --rm -i \
            --volume ${PWD}:/root/src \
            --workdir /root/src \
            joseluisq/rust-linux-darwin-builder:${RUST_VERSION} \
            cargo build --release \
          && ls -al target

      - name: Package release
        run: tar -czf git-ex-${{ github.event.release.tag_name }}-${{ matrix.target }}.tar.gz -C ./target/${{ matrix.target }}/release/ git-ex

      - name: Upload release asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: git-ex-${{ github.event.release.tag_name }}-${{ matrix.target }}.tar.gz
          asset_name: git-ex-${{ github.event.release.tag_name }}-${{ matrix.target }}.tar.gz
          asset_content_type: application/zip
